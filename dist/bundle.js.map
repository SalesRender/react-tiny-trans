{"version":3,"file":"bundle.js","mappings":"mBACA,IAAIA,EAAsB,CCA1B,EAAyBC,IACxB,IAAIC,EAASD,GAAUA,EAAOE,WAC7B,IAAOF,EAAiB,QACxB,IAAM,EAEP,OADAD,EAAoBI,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,GCLR,EAAwB,CAACI,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3E,EAAwB,CAACM,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClF,EAAyBT,IACH,oBAAXa,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeL,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeL,EAAS,aAAc,CAAEe,OAAO,M,sGCLvD,MAAM,EAA+BC,QAAQ,S,uSCIvCC,GAAe,IAAAC,eAA2B,MAEnCC,EAAkB,WAC7B,WAAAC,YAAWH,IAEAI,EAAgB,SAAiC,G,IAC5DC,EAAQ,WACRC,EAAK,QACLC,EAAY,eACZC,EAAU,aAEJ,KAAwB,IAAAC,WAAS,GAAM,GAAtCC,EAAO,KAAEC,EAAU,KACpB,KAAyC,IAAAC,aAAW,SAACC,GAAM,OAACA,KAAG,GAAM,GAApEC,EAAc,KAAEC,EAAoB,KAErCC,GAAY,IAAAC,cAAY,WAC5BC,uBAAsB,WAAM,OAAAP,GAAW,QACtC,IAEGQ,GAAU,IAAAF,cAAY,WAC1BC,uBAAsB,WACpBP,GAAW,GACXI,SAED,KAEH,IAAAK,YAAU,WAGR,OAFAd,EAAMe,iBAAiB,YAAaL,GACpCV,EAAMe,iBAAiB,UAAWF,GAC3B,WACLb,EAAMgB,oBAAoB,YAAaN,GACvCV,EAAMgB,oBAAoB,UAAWH,MAEtC,CAACA,EAASH,EAAWV,KAExB,IAAAc,YAAU,WACRd,EAAMiB,KAAK,CAAEhB,aAAY,EAAEiB,OAAQhB,MAClC,CAACA,EAAYF,EAAOC,IAEvB,IAAMT,GAAQ,IAAA2B,UACZ,WAAM,OAAGf,QAAO,EAAEJ,MAAK,EAAEQ,eAAc,KACvC,CAACA,EAAgBR,EAAOI,IAG1B,OAAO,gBAACV,EAAa0B,SAAQ,CAAC5B,MAAOA,GAAQO,I,+MChClCsB,EAAe,SAC1BjD,GAEM,MAA4BwB,IAA1BI,EAAK,QAAEQ,EAAc,iBACvBc,GAAY,IAAAH,UAAQ,WAAM,OAfN,SAACG,GAC3B,IAAMC,EAA8B,GACpC,OAAO,SAACC,EAAMC,GACZ,IAAM9C,EAAM6C,MAAAA,OAAI,EAAJA,EAAME,WAClB,GAAI/C,KAAO4C,EAAK,OAAOA,EAAI5C,GAC3B,IAAMgD,EAASL,EAAUE,EAAMC,GAE/B,OADAF,EAAI5C,GAAOgD,EACJA,GAQuBC,CAAoB5B,EAAM6B,gBAAgBzD,MAAU,CAACA,EAAQ4B,EAAOQ,IACpG,OAAO,IAAAW,UACL,WAAM,OACJD,OAAQlB,EAAMkB,OACdY,aAAc9B,EAAM8B,aACpBR,UAAS,KAEX,CAACA,EAAWtB,KAIH+B,EACX,SACEC,EACA5D,GAEF,gBAAC6D,GACC,IAAMjC,EAAQqB,EAAajD,GAC3B,OAAO,kBAAC4D,EAAS,KAAKC,EAAWjC,S","sources":["webpack://useTransContext.useTranslate.withTranslate.TransProvider/webpack/bootstrap","webpack://useTransContext.useTranslate.withTranslate.TransProvider/webpack/runtime/compat get default export","webpack://useTransContext.useTranslate.withTranslate.TransProvider/webpack/runtime/define property getters","webpack://useTransContext.useTranslate.withTranslate.TransProvider/webpack/runtime/hasOwnProperty shorthand","webpack://useTransContext.useTranslate.withTranslate.TransProvider/webpack/runtime/make namespace object","webpack://useTransContext.useTranslate.withTranslate.TransProvider/external {\"commonjs\":\"react\",\"commonjs2\":\"react\",\"amd\":\"react\",\"root\":\"React\"}","webpack://useTransContext.useTranslate.withTranslate.TransProvider/./TransProvider.tsx","webpack://useTransContext.useTranslate.withTranslate.TransProvider/./hooks.tsx"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"react\");","import * as React from 'react';\nimport { ReactElement, createContext, useCallback, useContext, useEffect, useMemo, useReducer, useState } from 'react';\nimport { ContextType, TransProviderProps } from './types';\n\nconst TransContext = createContext<ContextType>(null);\n\nexport const useTransContext = <Locale extends string = string>(): ContextType<Locale> =>\n  useContext(TransContext) as ContextType<Locale>;\n\nexport const TransProvider = <Locale extends string = string>({\n  children,\n  trans,\n  translations,\n  initLocale,\n}: TransProviderProps<Locale>): ReactElement => {\n  const [loading, setLoading] = useState(false);\n  const [updatedTrigger, toggleUpdatedTrigger] = useReducer((v) => !v, false);\n\n  const loadstart = useCallback(() => {\n    requestAnimationFrame(() => setLoading(true));\n  }, []);\n\n  const loadend = useCallback(() => {\n    requestAnimationFrame(() => {\n      setLoading(false);\n      toggleUpdatedTrigger();\n    });\n  }, []);\n\n  useEffect(() => {\n    trans.addEventListener('loadstart', loadstart);\n    trans.addEventListener('loadend', loadend);\n    return (): void => {\n      trans.removeEventListener('loadstart', loadstart);\n      trans.removeEventListener('loadend', loadend);\n    };\n  }, [loadend, loadstart, trans]);\n\n  useEffect(() => {\n    trans.init({ translations, locale: initLocale });\n  }, [initLocale, trans, translations]);\n\n  const value = useMemo<ContextType<Locale>>(\n    () => ({ loading, trans, updatedTrigger }),\n    [updatedTrigger, trans, loading]\n  );\n\n  return <TransContext.Provider value={value}>{children}</TransContext.Provider>;\n};\n","import React, { useMemo } from 'react';\nimport { useTransContext } from './TransProvider';\nimport { Translate, TranslateProps, Variables } from './types';\n\nconst createMemoTranslate = (translate: Translate): Translate => {\n  const map: Record<string, string> = {};\n  return (path, options): string => {\n    const key = path?.toString();\n    if (key in map) return map[key];\n    const result = translate(path, options);\n    map[key] = result;\n    return result;\n  };\n};\n\nexport const useTranslate = <T extends Variables = Variables>(\n  module: string | TemplateStringsArray\n): TranslateProps<T> => {\n  const { trans, updatedTrigger } = useTransContext();\n  const translate = useMemo(() => createMemoTranslate(trans.createTranslate(module)), [module, trans, updatedTrigger]); // eslint-disable-line react-hooks/exhaustive-deps\n  return useMemo(\n    () => ({\n      locale: trans.locale,\n      changeLocale: trans.changeLocale,\n      translate,\n    }),\n    [translate, trans]\n  );\n};\n\nexport const withTranslate =\n  <P, T extends Variables = Variables>(\n    Component: React.ComponentType<P & TranslateProps<T>>,\n    module: string | TemplateStringsArray\n  ) =>\n  (props: P): React.ReactElement => {\n    const trans = useTranslate(module);\n    return <Component {...props} {...trans} />;\n  };\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","require","TransContext","createContext","useTransContext","useContext","TransProvider","children","trans","translations","initLocale","useState","loading","setLoading","useReducer","v","updatedTrigger","toggleUpdatedTrigger","loadstart","useCallback","requestAnimationFrame","loadend","useEffect","addEventListener","removeEventListener","init","locale","useMemo","Provider","useTranslate","translate","map","path","options","toString","result","createMemoTranslate","createTranslate","changeLocale","withTranslate","Component","props"],"sourceRoot":""}